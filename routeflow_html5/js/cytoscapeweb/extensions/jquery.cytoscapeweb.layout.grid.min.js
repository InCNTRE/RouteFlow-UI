
/* jquery.cytoscapeweb.layout.grid.min.js */

/**
 * This file is part of Cytoscape Web snapshot-2012.03.27-15.39.21.
 * 
 * Cytoscape Web is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * Cytoscape Web is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License along with
 * Cytoscape Web. If not, see <http://www.gnu.org/licenses/>.
 */
 
(function(b,a){var d={fit:true,rows:undefined,columns:undefined};function c(){b.cytoscapeweb("debug","Creating grid layout")}c.prototype.run=function(y){var i=b.extend(true,{},d,y);var h=y.cy;var u=h.nodes();var g=h.edges();var q=h.container();b.cytoscapeweb("debug","Running grid layout with options (%o)",i);var t=q.width();var s=q.height();b.cytoscapeweb("debug","Running grid layout on container of size (w, h) = (%i, %i) with %i nodes",t,s,u.size());if(s==0||t==0){b.cytoscapeweb("warn","Running grid layout on container of size 0");
u.positions(function(){return{x:0,y:0}})}else{var j=u.size();var o=Math.sqrt(j*s/t);var n=Math.round(o);var p=Math.round(t/s*o);b.cytoscapeweb("debug","Grid layout decided on initial (cols, rows) = (%i, %i)",p,n);function m(A){if(A==undefined){return Math.min(n,p)}else{var z=Math.min(n,p);if(z==n){n=A;b.cytoscapeweb("debug","Grid layout set small number of rows to %i",n)}else{p=A;b.cytoscapeweb("debug","Grid layout set small number of columns to %i",p)}}}function f(A){if(A==undefined){return Math.max(n,p)
}else{var z=Math.max(n,p);if(z==n){n=A;b.cytoscapeweb("debug","Grid layout set large number of rows to %i",n)}else{p=A;b.cytoscapeweb("debug","Grid layout set large number of columns to %i",p)}}}if(i.rows!=null&&i.columns!=null){n=i.rows;p=i.columns}else{if(i.rows!=null&&i.columns==null){n=i.rows;p=Math.ceil(j/n)}else{if(i.rows==null&&i.columns!=null){p=i.columns;n=Math.ceil(j/p)}else{if(p*n>j){var x=m();var r=f();b.cytoscapeweb("debug","Grid layout is looking to make a reduction");if((x-1)*r>=j){m(x-1)
}else{if((r-1)*x>=j){f(r-1)}}}else{b.cytoscapeweb("debug","Grid layout is looking to make an increase");while(p*n<j){var x=m();var r=f();if((r+1)*x>=j){f(r+1)}else{m(x+1)}}}}}}b.cytoscapeweb("debug","Grid layout split area into cells (cols, rows) = (%i, %i)",p,n);var w=t/p;var e=s/n;var l=0;var k=0;u.positions(function(B,A){if(A.locked()){return false}var z=k*w+w/2;var C=l*e+e/2;k++;if(k>=p){k=0;l++}return{x:z,y:C}})}if(i.fit){h.reset()}function v(z){if(z!=null&&typeof z==typeof function(){}){z()
}}h.trigger("layoutready");v(y.ready);h.trigger("layoutstop");v(y.stop)};b.cytoscapeweb("layout","grid",c)})(jQuery,jQuery.cytoscapeweb);