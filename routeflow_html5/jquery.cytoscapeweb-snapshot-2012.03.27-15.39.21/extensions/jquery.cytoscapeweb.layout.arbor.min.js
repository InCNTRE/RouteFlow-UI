
/* jquery.cytoscapeweb.layout.arbor.min.js */

/**
 * This file is part of Cytoscape Web snapshot-2012.03.27-15.39.21.
 * 
 * Cytoscape Web is free software: you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation, either version 3 of the License, or (at your option) any
 * later version.
 * 
 * Cytoscape Web is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 * 
 * You should have received a copy of the GNU Lesser General Public License along with
 * Cytoscape Web. If not, see <http://www.gnu.org/licenses/>.
 */
 
(function(c,b){var d={ready:undefined,maxSimulationTime:8000,fit:true,padding:[50,50,50,50],ungrabifyWhileSimulating:true,repulsion:undefined,stiffness:undefined,friction:undefined,gravity:undefined,fps:30,dt:undefined,precision:undefined,nodeMass:undefined,edgeLength:undefined};function e(){c.cytoscapeweb("debug","Creating force-directed layout")}function a(f){if(f!=null&&typeof f==typeof function(){}){f()}}e.prototype.run=function(y){var m=c.extend(true,{},d,y);c.cytoscapeweb("debug","Running force-directed layout with options (%o)",m);
var l=m.cy;var w=l.nodes();var k=l.edges();var r=l.container();var o=window.sys=arbor.ParticleSystem(m.repulsion,m.stiffness,m.friction,m.gravity,m.fps,m.dt,m.precision);if(m.fit){l.reset()}var j=3;var u=j*1000/m.fps;var i;var q=false;var s={init:function(z){},redraw:function(){clearTimeout(i);i=setTimeout(x,u);var z=l.collection();o.eachNode(function(F,A){var E=F.name;var C=F.data;var B=C.element;if(B==null){return}var D=B._private.position;if(!B.locked()&&!B.grabbed()){D.x=A.x;D.y=A.y;z=z.add(B)
}});if(z.size()>0){z.rtrigger("position")}if(!q){q=true;l.trigger("layoutready");a(y.ready)}}};o.renderer=s;var v=r.width();var t=r.height();o.screenSize(v,t);o.screenPadding(m.padding[0],m.padding[1],m.padding[2],m.padding[3]);function p(z,A){if(A==null){return undefined}else{if(typeof A==typeof function(){}){return A.apply(z,[z.data()])}else{return A}}}function f(D){var G=D.x;var E=D.y;var H=v;var B=t;var A=-2;var I=2;var F=-2;var z=2;var C=4;return{x:G/H*C+A,y:E/B*C+I}}var n=function(A){grabbed=this;
var B=o.fromScreen(this._private.position);var z=arbor.Point(B.x,B.y);this._private.arbor.p=z;switch(A.type){case"grab":this._private.arbor.fixed=true;break;case"dragstop":this._private.arbor.fixed=false;this._private.arbor.tempMass=1000;break}};w.bind("grab drag dragstop",n);w.each(function(B,C){var E=this._private.data.id;var A=p(this,m.nodeMass);var z=this._private.locked;var D=f({x:C._private.position.x,y:C._private.position.y});this._private.arbor=o.addNode(E,{element:this,mass:A,fixed:z,x:z?D.x:undefined,y:z?D.y:undefined})
});k.each(function(){var C=this.id();var A=this.source().id();var B=this.target().id();var z=p(this,m.edgeLength);this._private.arbor=o.addEdge(A,B,{length:z})});function h(z){if(m.fit){l.fit()}z()}var g=w.filter(":grabbable");if(m.ungrabifyWhileSimulating){g.ungrabify()}var x=function(){if(c.browser.msie){h(function(){z()})}else{z()}function z(){w.unbind("grab drag dragstop",n);if(m.ungrabifyWhileSimulating){g.grabify()}l.trigger("layoutstop");a(y.stop)}};o.start();setTimeout(function(){o.stop()
},m.maxSimulationTime)};c.cytoscapeweb("layout","arbor",e)})(jQuery,jQuery.cytoscapeweb);